version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bm-service-server
    volumes:
      # - sqlite_data:/var/www/database
    env_file:
      - .env
    environment:
      APP_ENV: production
      APP_DEBUG: "true"
      APP_KEY: ${APP_KEY}
      BROADCAST_DRIVER: ${BROADCAST_DRIVER}
      REVERB_APP_ID: ${REVERB_APP_ID}
      REVERB_APP_KEY: ${REVERB_APP_KEY}
      REVERB_APP_SECRET: ${REVERB_APP_SECRET}
      REVERB_HOST: ${REVERB_HOST}
      REVERB_PORT: ${REVERB_PORT}
      REVERB_SCHEME: ${REVERB_SCHEME}

    depends_on:
      - reverb
    networks:
      - laravel
      - monitoring
  prometheus:
      image: prom/prometheus
      container_name: prometheus
      ports:
        - "9090:9090"
      volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml
      networks:
        - monitoring

  grafana:
      image: grafana/grafana
      container_name: grafana
      ports:
        - "3000:3000"
      environment:
        - GF_SECURITY_ADMIN_PASSWORD=admin # Установите пароль для Grafana
      networks:
        - monitoring

  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring

  reverb:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bm-service-reverb
    command: ["php", "/var/www/artisan", "reverb:start", "--host=127.0.0.1","--port=6001", "--debug"]
    stop_signal: SIGTERM
    ports:
      - "6001:6001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - laravel
      - monitoring


networks:
  laravel:
    driver: bridge


volumes:
  sqlite_data:  

